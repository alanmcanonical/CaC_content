<def-group>
  <definition class="compliance" id="{{{ rule_id }}}" version="1">
    {{{ oval_metadata("The .netrc file specifies an email address to netrc the user's mail to.") }}}
    <criteria>
      <criterion test_ref="tst_no_netrc_files_exist" comment="no users have .netrc files" />
    </criteria>
  </definition>
  <unix:file_object id="obj_user_has_netrc_file" version="1">
    <unix:path datatype="string" var_ref="var_all_users_home_dirs_for_no_netrc" var_check="at least one" />
    <unix:filename>.netrc</unix:filename>
    <filter action="include">ste_netrc_file_or_symlink_exists</filter>
  </unix:file_object>
  <ind:textfilecontent54_object id="obj_etc_passwd_all_homedirs_for_no_netrc" version="1">
    <ind:filepath datatype="string">/etc/passwd</ind:filepath>
    <ind:pattern operation="pattern match" datatype="string">^(?!\broot\b|\bhalt\b|\bsync\b|\bshutdown\b).*:.*:.*:.*:.*:(.*):(?!\/usr\/sbin\/nologin\b|\/bin\/false\b).*$</ind:pattern>
    <ind:instance operation="greater than or equal" datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>
  <unix:file_state id="ste_netrc_file_or_symlink_exists" version="1">
    <unix:type operation="pattern match">^(regular|symbolic link)$</unix:type>
  </unix:file_state>
  <unix:file_test check="all" check_existence="none_exist" id="tst_no_netrc_files_exist" version="1" comment="no user has .netrc files">
    <unix:object object_ref="obj_user_has_netrc_file" />
  </unix:file_test>
  <local_variable datatype="string" id="var_all_users_home_dirs_for_no_netrc" version="1" comment="every users' home directories, except for root's">
      <object_component item_field="subexpression" object_ref="obj_etc_passwd_all_homedirs_for_no_netrc" />
  </local_variable>
</def-group>
